/*Z-index order/registry:
100 - reserved for always visible elements
  - Header
0 - background elements only
  - Static background

*/

/*Font definition*/
@font-face {
  font-family: VCR;
  src: url('VCR_OSD_MONO_1.001.ttf') format('truetype');
}

@font-face {
  font-family: Helvetica-Bold;
  src: url('Helvetica\ Bold\ Condensed\ Oblique.otf') format('woff');
}

@font-face {
  font-family: Helvetica-Custom;
  src: url('Helvetica\ CE\ Bold.otf') format('woff');
}


/*both are the "global" vars for light mode and dark mode themes*/
html {
  background:
    var(--lightBg);
  --bgColor: #f5f0f0;
  --btnAbout: #fdc331;
  --btnProjects: #fe5722;
  --btnFacts: #ae203b;
  --gradient: linear-gradient(0deg, var(--btnAbout) 0%, var(--btnProjects) 73%, var(--btnFacts) 100%);
  --gradientDown: linear-gradient(0deg, var(--btnFacts) 0%, var(--btnProjects) 73%, var(--btnAbout) 100%);
  --gradientSide: linear-gradient(90deg, var(--btnAbout) 0%, var(--btnProjects) 73%, var(--btnFacts) 100%);
  --gradientFullStop: linear-gradient(0deg, var(--btnAbout), var(--btnAbout) 33%, var(--btnProjects) 33%, var(--btnProjects) 73%, var(--btnFacts) 73%, var(--btnFacts));
  --gradientDownFullStop: linear-gradient(0deg, var(--btnFacts), var(--btnFacts) 33%, var(--btnProjects) 33%, var(--btnProjects) 73%, var(--btnAbout) 73%, var(--btnAbout));
  --gradientSideFullStop: linear-gradient(90deg, var(--btnAbout), var(--btnAbout) 33%, var(--btnProjects) 33%, var(--btnProjects) 73%, var(--btnFacts) 73%, var(--btnFacts));
  --textColor: black;
  --textColorHover: white;
  --staticOpacity: 0;

  background-color: var(--bgColor);

}

body {
  display: flex;
}

/*TODO update all dark-mode version colors*/
html[data-theme=dark] {
  background:
    var(--lightBg);
  --bgColor: #1a1a1a;
  --btnAbout: #691d58;
  --btnProjects: #b70851;
  --btnFacts: #e7083c;
  --gradient: linear-gradient(0deg, var(--btnAbout) 0%, var(--btnProjects) 73%, var(--btnFacts) 100%);
  --gradientDown: linear-gradient(0deg, var(--btnFacts) 0%, var(--btnProjects) 73%, var(--btnAbout) 100%);
  --gradientSide: linear-gradient(90deg, var(--btnAbout) 0%, var(--btnProjects) 73%, var(--btnFacts) 100%);
  --gradientFullStop: linear-gradient(0deg, var(--btnAbout), var(--btnAbout) 33%, var(--btnProjects) 33%, var(--btnProjects) 73%, var(--btnFacts) 73%, var(--btnFacts));
  --gradientDownFullStop: linear-gradient(0deg, var(--btnFacts), var(--btnFacts) 33%, var(--btnProjects) 33%, var(--btnProjects) 73%, var(--btnAbout) 73%, var(--btnAbout));
  --gradientSideFullStop: linear-gradient(90deg, var(--btnAbout), var(--btnAbout) 33%, var(--btnProjects) 33%, var(--btnProjects) 73%, var(--btnFacts) 73%, var(--btnFacts));
  --textColor: white;
  --textColorHover: white;
  --staticOpacity: 1;
}

#gradient-horizontal {
  --color-stop-1: var(--btnAbout);
  --color-stop-2: var(--btnProjects);
  --color-stop-3: var(--btnFacts);
}

#gradient-horizontal-fullstop {
  --color-stop-1: var(--btnAbout);
  --color-stop-2: var(--btnAbout);
  --color-stop-3: var(--btnProjects);
  --color-stop-4: var(--btnProjects);
  --color-stop-5: var(--btnFacts);
  --color-stop-6: var(--btnFacts);
}

h2 {
  font-family: Helvetica-Bold;
  font-size: 200%;
}

p {
  font-family: Helvetica-Custom, sans-serif;
  font-weight: bold;
}

span {
  font-family: Helvetica, sans-serif;
  font-weight: bold;
}

header {
  display: flex;
  position: fixed;
  top: 0;
  right: 0;
  height: 8vh;
  width: 100%;
  background-color: var(--bgColor);
  z-index: 100;
  border: solid;
  border-color: green;
}

.headerLinks {
  display: flex;
  font-family: Helvetica-Bold;
  font-size: 3.5vw;
  width: 100%;
  justify-content: flex-end;

}

.highlightBox {
  display: flex;
  align-items: stretch;
}

.highlightBox>a {
  display: flex;
  position: relative;
  padding-left: 1vw;
  padding-right: 1vw;
  align-items: center;
  justify-content: center;
  min-width: 10vw;
  text-decoration: none;
  transition: 0.4s;
  color: var(--textColor);
}

/*So the header text doesn't become too small on mobile or too big on desktop, this is for mobile only*/
/*TODO check out how many more we gotta do*/
@media only screen and (max-width: 600px) {
  .headerLinks {
    font-size: 6vw;
  }
}

#highAbout::before {
  transform: scaleX(0);
  transform-origin: bottom right;
}

#highAbout:hover::before {
  transform: scaleX(1);
  transform-origin: bottom left;
}

#highAbout::before {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  inset: 0 0 0 0;
  background: var(--btnAbout);
  z-index: -1;
  transition: transform .3s ease;
}

#highProjects::before {
  transform: scaleX(0);
  transform-origin: bottom right;
}

#highProjects:hover::before {
  transform: scaleX(1);
  transform-origin: bottom left;
}

#highProjects::before {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  inset: 0 0 0 0;
  background: var(--btnProjects);
  z-index: -1;
  transition: transform .3s ease;
}

#highFacts::before {
  transform: scaleX(0);
  transform-origin: bottom right;
}

#highFacts:hover::before {
  transform: scaleX(1);
  transform-origin: bottom left;
}

#highFacts::before {
  content: " ";
  display: block;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  inset: 0 0 0 0;
  background: var(--btnFacts);
  z-index: -1;
  transition: transform .3s ease;
}

#highAbout:hover {
  color: var(--textColorHover);
}

#highProjects:hover {
  color: var(--textColorHover);
}

#highFacts:hover {
  color: var(--textColorHover);
}

/*
#highAbout:hover {
  
  background:
    var(--btnAbout);
  color: var(--textColorHover);
}

#highProjects:hover {
  background:
    var(--btnProjects);
  color: var(--textColorHover);
}

#highFacts:hover {
  background:
    var(--btnFacts);
  color: var(--textColorHover);
}*/


/*SLIDER PART*/

.slider_container {
  display: flex;
  flex-direction: row;
  align-items: center;
  margin-left: 2vw;
}

/*mfw the 0*0 thing still occupies space be it hidden or not lmao*/
input[type=checkbox] {
  height: 0;
  width: 0;
  visibility: hidden;
}

label {
  cursor: pointer;
  width: 55px;
  height: 30px;
  background: var(--gradientSideFullStop);
  /*had another state for checked but this is cleaner and 100% inline with current theme*/
  display: flex;
  float: right;
  -webkit-border-radius: 100px;
  -moz-border-radius: 100px;
  border-radius: 100px;
  position: relative;
}

/*controls the inner ball*/
label:after {
  content: "";
  background: #fff;
  width: 20px;
  height: 20px;
  -webkit-border-radius: 50%;
  -moz-border-radius: 50%;
  border-radius: 50%;
  position: absolute;
  top: 5px;
  left: 4px;
  transition: cubic-bezier(0.68, -0.55, 0.27, 1.55) 320ms;
}

input:checked+label:after {
  left: calc(100% - 5px);
  -webkit-transform: translateX(-100%);
  -moz-transform: translateX(-100%);
  -ms-transform: translateX(-100%);
  -o-transform: translateX(-100%);
  transform: translateX(-100%);
}

html.transition,
html.transition *,
html.transition *:before,
html.transition *:after {
  transition: cubic-bezier(0.68, -0.55, 0.27, 1.55) 420ms !important;
  transition-delay: 0 !important;
}

/*SLIDER PART END*/

/*STATIC PART*/

/*Taken and adapted from:
https://codepen.io/anatravas/pen/vyOwOZ
*/
.body_bg {
  position: fixed;
  background-color: #2c2c2c;
  background: radial-gradient(ellipse at center, #29382c 0%, #0c100d 100%);
  height: 100%;
  width: 100%;
  opacity: var(--staticOpacity);
  top: 0px;
  left: 0px;
  z-index: -1;
}


.main-wrapper {
  position: relative;
  padding: 0;
  min-height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}

.noise-wrapper {
  position: absolute;
  left: 0;
  top: 0;
  width: 100%;
  height: 100%;
  overflow: hidden;
}

.noise-wrapper:after {
  content: '';
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  background: radial-gradient(ellipse at center, rgba(0, 0, 0, 0) 0%, rgba(0, 0, 0, 0.75) 100%);
}

.noise {
  position: absolute;
  top: -500px;
  right: -500px;
  bottom: -500px;
  left: -500px;
  background: transparent url(https://www.dropbox.com/s/h7ab1c82ctzy83n/noise.png?raw=1) 0 0;
  background-size: 320px 320px;
  opacity: 0.35;
  -webkit-animation: noise 1s steps(8, end) infinite both;
  animation: noise 1s steps(8, end) infinite both;
}

@-webkit-keyframes noise {
  0% {
    transform: translateX(0px, 0px);
  }

  10% {
    transform: translate(-100px, 100px);
  }

  20% {
    transform: translate(150px, -100px);
  }

  30% {
    transform: translate(-100px, 100px);
  }

  40% {
    transform: translate(100px, -150px);
  }

  50% {
    transform: translate(-100px, 200px);
  }

  60% {
    transform: translate(-200px, -100px);
  }

  70% {
    transform: translateY(50px, 100px);
  }

  80% {
    transform: translate(100px, -150px);
  }

  90% {
    transform: translate(0px, 200px);
  }

  100% {
    transform: translate(-100px, 100px);
  }
}

@keyframes noise {
  0% {
    transform: translateX(0px, 0px);
  }

  10% {
    transform: translate(-100px, 100px);
  }

  20% {
    transform: translate(150px, -100px);
  }

  30% {
    transform: translate(-100px, 100px);
  }

  40% {
    transform: translate(100px, -150px);
  }

  50% {
    transform: translate(-100px, 200px);
  }

  60% {
    transform: translate(-200px, -100px);
  }

  70% {
    transform: translateY(50px, 100px);
  }

  80% {
    transform: translate(100px, -150px);
  }

  90% {
    transform: translate(0px, 200px);
  }

  100% {
    transform: translate(-100px, 100px);
  }
}

/*STATIC PART END*/

/*CONTENT PART BEGIN*/

main {
  border: solid;
  border-color: red;
  margin-top: 8vh;
  /*margin-left: 12vw;*/
  margin-left: 20vw;
  /*margin-right: 12vw;*/
  color: var(--textColor);
}

.main_section {
  margin-top: 500px;
}

/*ABOUT SECTION BEGIN*/

#about {
  display: inline-block;
}

.selfPic {
  object-fit: contain;
  max-width: 30vw;
  max-height: 30vh;
  width: auto;
  height: auto;
  align-self: center;
}

.block {
  display: flex;
  flex-direction: row;
  align-items: center;
  border: solid;
  border-color: blue;
}

/*ABOUT SECTION END*/

/*CONTENT PART END*/

/*SIDE SOCIALS PART START*/
.socials {
  display: inline-block;
  position: fixed;
  max-width: 8vw;
  margin-top: 8vh;
  top: 50%;
  transform: translate(0, -55%);
  border: solid;
  border-color: purple;
}

.socials_item {
  display: flex;
  max-height: 8vh;
  max-width: 8vw;
  margin: 10%;
  margin-left: auto;
  margin-right: auto;
}

/*TODO check out if these look good*/
@media only screen and (max-width: 600px) {
  .socials {
    max-width: 15vw;
    min-width: 10vw;
  }
}

@media only screen and (max-width: 600px) {
  .socials-item {
    max-height: 15vh;
    max-width: 15vw;
    margin: 20%;
    min-width: 10vw;
  }
}

@media only screen and (max-width: 600px) {
  #rose_glasses_pic {
    max-height: 15vh;
    max-width: 15vw;
  }
}


/*https://dev.to/hasantezcan/how-to-colorize-svg-image-1kc8*/
.socials_logo {
  mask-size: 100%;
  -webkit-mask-repeat: no-repeat;
  mask-repeat: no-repeat;
  mask-position: center;
  /*fill: url(#gradient-horizontal) var(--textColor);*/
  fill: url(#gradient-horizontal-fullstop) var(--textColor);
}

#rose_glasses_pic {
  max-height: 8vh;
  max-width: 8vw;
  border-radius: 100%;
}

.socials::before {
  content: "";
  background: var(--gradientFullStop);
  width: 5px;
  height: 50vh;
  display: block;
  margin: 0 auto;
}

.socials::after {
  content: "";
  background: var(--gradientDownFullStop);
  width: 5px;
  height: 50vh;
  display: block;
  margin: 0 auto;
}


/*SIDE SOCIALS PART END*/

/*CAT FACTS PART BEGIN*/

.funfacts {
  display: inline-block;
}

#cat-fact {
  display: flex;
  flex-direction: row;
  align-items: center;
}

#random-cat {
  max-width: 30vw;
  max-height: 30vh;
  width: auto;
  height: auto;
  align-self: center;
}

/*CAT FACTS PART END*/